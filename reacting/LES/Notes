Notes
-----

Mesh Creation
-------------

For both LES

>python buildMesh.py -c non-reacting/LES/ -m 2 -w 0.3 -g 1.1 -uy 1.1 -l 1.05 -uz 1.05

Which corresponds to a 2mm mesh, w/ wall spacing of 0.3mm.
The geometric expansion ratio in the y-direction is 1.15, while in the z-direction (downstream of the BB)
it is 1.05

This yields a mesh of 2365000 cells, which is slightly more than Cocks et al., but they
also did not include the full inlet


Initialization
--------------

We first initialize the solution using the "potential" solution.
After this, the solution is ignited using a two-step BFER Methane mechanism using the "RAS_twostep" case.
Once the flame becomes attached to the bluffbody and relatively well behaved, you may switch to the coarse
accelerint case to generate a realistic solution, as the RAS case here has far too little turbulence to be
used on it's own.
The coarse LES case should be run for around a single flow-through time (~0.05s) to allow
a the flame to fully develop.
Next the fine LES accelerint case ("LES_accelerint") can be initialized from
the coarse solution and run (we used about 0.1ms of simulated time). The times generated by the fine LES
accelerint case can be listed as:

>foamListTimes -processor

yielding a list like:

>5.099999999999999e-06
9.9e-06
1.440000000000001e-05
1.950000000000002e-05
2.430000000000002e-05
2.940000000000003e-05
3.090000000000003e-05
3.600000000000004e-05
4.080000000000005e-05
4.590000000000006e-05
4.740000000000006e-05
5.250000000000007e-05
5.730000000000008e-05
6.240000000000005e-05
6.360000000000003e-05
6.869999999999992e-05
7.379999999999982e-05
7.859999999999972e-05
8.369999999999961e-05
8.489999999999958e-05
8.999999999999948e-05
9.479999999999938e-05
9.989999999999927e-05
0.0001010999999999992
0.0001061999999999991
0.000110999999999999
0.0001160999999999989
0.0001175999999999989
0.0001226999999999988
0.000127499999999999
0.0001325999999999991
0.0001334999999999991
0.0001385999999999992
0.0001433999999999993
0.0001484999999999995
0.0001505999999999995
0.0001556999999999996
0.0001604999999999997
0.0001655999999999999
0.0001670999999999999
0.0001722
0.0001770000000000001
0.0001821000000000003
0.0001836000000000003

This list is then filted to select 10 ~equally spaced times:
>5.099999999999999e-06
2.430000000000002e-05
4.590000000000006e-05
6.869999999999992e-05
8.999999999999948e-05
0.000110999999999999
0.0001325999999999991
0.0001556999999999996
0.0001770000000000001
0.0001836000000000003

These are then saved under the file "times" in the LES folder, and will be used as a
database of times to reconstruct / run for the base OpenFOAM solver (the "LES" case)
