Notes
-----

- http://www.pointwise.com/yplus/, the expected y+ is ~0.017 mm, hence we need a wall treatment
- Mesh is different from LES case, place first cell at 1mm,  -> ~58 * y+
- this will require interpolation via mapFields for the LES initialization case

Mesh Creation
-------------

For both RANS & Potential, the mesh is created with:

>python buildMesh.py -c non-reacting/CASE/ -m 4 -w 1 -g 1.25 -l 1.05

Which corresponds to a 4mm mesh, w/ wall spacing of 0.85mm.
The geometric expansion ratio in the y-direction is 1.2, while in the z-direction (downstream of the BB)
it is 1.1

This yields a mesh of 225720 cells, which is nice and cheap for simulation

Initial Conditions
------------------

Start with potential flow solution (mapFields from decompose)

Scheme
------

The fvSchemes used here are designed to be very diffusive to get rid of the large
ugly pressure waves (and instability caused therein), specifically to be used as an
input to the regular RANS simulation

You will want to start with a fixed timestep of 1e-06s, and gradually increase it as the simulation goes on.
Once the initial transients (and pressure wave) have dissappated, you may map this onto the regular RANS case.

Time:

0s
--
	-fixed time-step of 1e-6s

~1e-4s
------
	- increase time-step to 2e-6s

~1e-3s
------
	- increase time-step to 3e-6s

~1e-2s
------
	- switch to adjustable mode (maxCo ~ 0.5)
	- you may also wish to increase the write interval here (~5e-3s)

~2e-2s
------
	- Flow is nicely developed, and may be switched to RANS input
