/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}


/*

Setup for simulation of Volvo flygmotor AB non-reacting flow LES

Nicholas Curtis - 04/10/2018

Based on:

Chalmers: http://www.tfd.chalmers.se/~hani/kurser/OS_CFD_2015/HrvojeJasak/DiscretisationBestPractice.pdf
Cocks et al: https://arc.aiaa.org/doi/abs/10.2514/6.2013-170
Wolf: http://www.wolfdynamics.com/wiki/OFtipsandtricks.pdf
Manual: https://cfd.direct/openfoam/user-guide/fvSchemes/

*/

// from pitz-daily potential flow case
ddtSchemes
{
    default         steadyState;
}

gradSchemes
{
    // Cocks et al. used a green-gauss node-based method, which doesn't appear
    // to be present by default in OpenFOAM.
    // The closest method is "Gauss linear" - which is a cell-based version of
    // the Green-gauss node-based method
    //
    // Chalmers states that Gauss gradient is accurate on hex-meshes
    //
    // Limit suggestion comes from Wolf
    default         cellMDLimited Gauss linear 0.5;
    grad(U)         cellMDLimited Gauss linear 0.5;
}

divSchemes
{
    default         none;
    // Cocks et al. used a 2nd order *bounded* central scheme for inviscid terms
    //      bounded by "Sweby limiter"
    // Wolf: accurate & stable numerical scheme -- 2nd order accurate
    div(phi,U)      Gauss linearUpwind grad(U);
    div(div(phi,U)) Gauss linear;
}

laplacianSchemes
{
    // Cocks et al. used a "2nd-order accurate central scheme for discretization of"
    //                     "the Laplacian terms"
    //
    // From the manual (https://cfd.direct/openfoam/user-guide/fvSchemes/#x19-1410004.4):
    // "to maintain *second-order accuracy*, an explicit non-orthogonal correction "
    // "can be added to the orthogonal component, known as the corrected scheme"
    //
    // Further, maximum orthogonality from checkMesh of the blockMesh output is:
    //      Mesh non-orthogonality Max: 29.37587877 average: 2.520147965
    // hence we don't need the "limited" approach
    //
    // from Chalmers, may want a cell/face-limited form for bounded variables (
    // e.g., mass fractions) -- but no need for limited as max non-orthgonality < 70
    default         Gauss linear limited 1.0;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         limited 1.0;
}
